(declare-const actionName String)
(declare-const actionNamespace String)
(declare-const |aws:referer| String)
(declare-const |aws:referer_exists| Bool)
(declare-const resource_account String)
(declare-const resource_partition String)
(declare-const resource_prefix String)
(declare-const resource_region String)
(declare-const resource_resource String)
(declare-const resource_service String)
(declare-const p0.0.action Bool)
(declare-const new_var0 Bool)
(declare-const new_var1 Bool)
(declare-const p0.0.condition Bool)
(declare-const new_var2 Bool)
(declare-const p0.0.resource Bool)
(declare-const new_var3 Bool)
(declare-const new_var4 Bool)
(declare-const new_var5 Bool)
(declare-const new_var6 Bool)
(declare-const new_var7 Bool)
(declare-const new_var8 Bool)
(declare-const p0.0.statement.allow Bool)
(declare-const p0.denies Bool)
(declare-const p0.allows Bool)
(declare-const p0.neutral Bool)
(declare-const p1.0.action Bool)
(declare-const p1.0.condition Bool)
(declare-const new_var9 Bool)
(declare-const p1.0.resource Bool)
(declare-const p1.0.statement.allow Bool)
(declare-const p1.denies Bool)
(declare-const p1.allows Bool)
(declare-const p1.neutral Bool)
(declare-const new_var10 Bool)
(declare-const new_var11 Bool)
(declare-const new_var12 Bool)
(declare-const new_var13 Bool)
(declare-const new_var14 Bool)
(declare-const new_var15 Bool)
(declare-const new_var16 Bool)
(declare-const new_var17 Bool)
(declare-const new_var18 Bool)
(declare-const new_var19 Bool)
(declare-const new_var20 Bool)
(declare-const new_var21 Bool)
(declare-const new_var22 Bool)
(declare-const new_var23 Bool)
(declare-const new_var24 Bool)
(declare-const new_var25 Bool)
(declare-const new_var26 Bool)
(declare-const new_var27 Bool)
(declare-const new_var28 Bool)
(declare-const new_var29 (RegEx String))
(declare-const new_var30 (RegEx String))
(declare-const new_var31 (RegEx String))
(declare-const new_var32 (RegEx String))
(declare-const new_var33 (RegEx String))
(declare-const new_var34 Bool)
(declare-const new_var35 (RegEx String))
(declare-const new_var36 (RegEx String))
(declare-const new_var37 (RegEx String))
(declare-const new_var38 (RegEx String))
(declare-const new_var39 (RegEx String))
(declare-const new_var40 Bool)
(declare-const new_var41 (RegEx String))
(declare-const new_var42 Bool)
(declare-const new_var43 Bool)
(assert (= new_var0 (= "\u{1d}\u{4}" actionNamespace)))
(assert (= new_var1 (= "\u{11}\u{f}\u{1e}\u{19}\u{c}\u{14}\u{f}\r\u{1e}" actionName)))
(assert (= new_var2 (str.suffixof "\u{c}\u{b}$" |aws:referer|)))
(assert (= new_var3 (= "\u{b}\u{1c}\u{18}" resource_prefix)))
(assert (= new_var4 (= "\u{b}!\u{1d}" resource_partition)))
(assert (= new_var5 (= "\u{1d}\u{4}" resource_service)))
(assert (= new_var6 (= "" resource_region)))
(assert (= new_var7 (= "" resource_account)))
(assert (= new_var8 (str.prefixof "\u{f}""\u{b}\u{17}\u{1a}\u{16}\u{f}\u{c}\u{1f}\r\u{15}\u{f}\u{1e}&" resource_resource)))
(assert (= new_var9 (str.prefixof "\u{12}\u{1e}\u{1e}\u{1a}\'&&!!!(\u{f}""\u{b}\u{17}\u{1a}\u{16}\u{f}\u{2}(\r\u{19}\u{17}&" |aws:referer|)))
(assert (= new_var10 (= "\u{b}\u{1a}%\u{f}\u{b}\u{1d}\u{1e}%\u{2}" resource_region)))
(assert (= new_var11 (= "\u{b}\u{1a}%\u{18}\u{19}\u{1c}\u{1e}\u{12}\u{f}\u{b}\u{1d}\u{1e}%\u{2}" resource_region)))
(assert (= new_var12 (= "\u{b}\u{1a}%\u{18}\u{19}\u{1c}\u{1e}\u{12}\u{f}\u{b}\u{1d}\u{1e}%\u{3}" resource_region)))
(assert (= new_var13 (= "\u{b}\u{1a}%\u{18}\u{19}\u{1c}\u{1e}\u{12}\u{f}\u{b}\u{1d}\u{1e}%\u{4}" resource_region)))
(assert (= new_var14 (= "\u{b}\u{1a}%\u{1d}\u{19}\u{1f}\u{1e}\u{12}%\u{2}" resource_region)))
(assert (= new_var15 (= "\u{b}\u{1a}%\u{1d}\u{19}\u{1f}\u{1e}\u{12}\u{f}\u{b}\u{1d}\u{1e}%\u{2}" resource_region)))
(assert (= new_var16 (= "\u{b}\u{1a}%\u{1d}\u{19}\u{1f}\u{1e}\u{12}\u{f}\u{b}\u{1d}\u{1e}%\u{3}" resource_region)))
(assert (= new_var17 (= "\r\u{b}%\r\u{f}\u{18}\u{1e}\u{1c}\u{b}\u{16}%\u{2}" resource_region)))
(assert (= new_var18 (= "\u{f}\u{1f}%\r\u{f}\u{18}\u{1e}\u{1c}\u{b}\u{16}%\u{2}" resource_region)))
(assert (= new_var19 (= "\u{f}\u{1f}%\u{18}\u{19}\u{1c}\u{1e}\u{12}%\u{2}" resource_region)))
(assert (= new_var20 (= "\u{f}\u{1f}%!\u{f}\u{1d}\u{1e}%\u{2}" resource_region)))
(assert (= new_var21 (= "\u{f}\u{1f}%!\u{f}\u{1d}\u{1e}%\u{3}" resource_region)))
(assert (= new_var22 (= "\u{f}\u{1f}%!\u{f}\u{1d}\u{1e}%\u{4}" resource_region)))
(assert (= new_var23 (= "\u{17}\u{f}%\u{1d}\u{19}\u{1f}\u{1e}\u{12}%\u{2}" resource_region)))
(assert (= new_var24 (= "\u{1d}\u{b}%\u{f}\u{b}\u{1d}\u{1e}%\u{2}" resource_region)))
(assert (= new_var25 (= "\u{1f}\u{1d}%\u{f}\u{b}\u{1d}\u{1e}%\u{2}" resource_region)))
(assert (= new_var26 (= "\u{1f}\u{1d}%\u{f}\u{b}\u{1d}\u{1e}%\u{3}" resource_region)))
(assert (= new_var27 (= "\u{1f}\u{1d}%!\u{f}\u{1d}\u{1e}%\u{2}" resource_region)))
(assert (= new_var28 (= "\u{1f}\u{1d}%!\u{f}\u{1d}\u{1e}%\u{3}" resource_region)))
(assert (= new_var29 (re.range "\u{b}" "$")))
(assert (= new_var30 (re.range "\u{1}" "\n")))
(assert (= new_var31 (str.to.re "%")))
(assert (= new_var32 (re.union new_var29 new_var30 new_var31)))
(assert (= new_var33 (re.* new_var32)))
(assert (= new_var34 (str.in.re resource_service new_var33)))
(assert (= new_var35 (str.to.re "")))
(assert (= new_var36 (re.loop new_var30 12 12)))
(assert (= new_var37 (str.to.re "\u{b}!\u{1d}")))
(assert (= new_var38 (str.to.re "\r\u{16}\u{19}\u{1f}\u{e}\u{10}\u{1c}\u{19}\u{18}\u{1e}")))
(assert (= new_var39 (re.union new_var35 new_var36 new_var37 new_var38)))
(assert (= new_var40 (str.in.re resource_account new_var39)))
(assert (= new_var41 (re.union new_var37 new_var38)))
(assert (= new_var42 (str.in.re resource_account new_var41)))
(assert (= new_var43 (= resource_service "\u{13}\u{b}\u{17}")))
(assert (= p0.0.action (and new_var0 new_var1)))
(assert (= p0.0.condition (and |aws:referer_exists| new_var2)))
(assert (= p0.0.resource (and new_var3 new_var4 new_var5 new_var6 new_var7 new_var8)))
(assert (= p0.0.statement.allow (and p0.0.action p0.0.condition p0.0.resource)))
(assert (not p0.denies))
(assert (= p0.allows p0.0.statement.allow))
(assert (= p0.neutral (not p0.0.statement.allow)))
(assert (= p1.0.action (and new_var0 new_var1)))
(assert (= p1.0.condition (and |aws:referer_exists| new_var9)))
(assert (= p1.0.resource (and new_var3 new_var4 new_var5 new_var6 new_var7 new_var8)))
(assert (= p1.0.statement.allow (and p1.0.action p1.0.condition p1.0.resource)))
(assert (not p1.denies))
(assert (= p1.allows p1.0.statement.allow))
(assert (= p1.neutral (not p1.0.statement.allow)))
(assert new_var3)
(assert (or (and new_var4 new_var10) (and new_var4 new_var6) (and new_var4 new_var11) (and new_var4 new_var12) (and new_var4 new_var13) (and new_var4 new_var14) (and new_var4 new_var15) (and new_var4 new_var16) (and new_var4 new_var17) (and new_var4 new_var18) (and new_var4 new_var19) (and new_var4 new_var20) (and new_var4 new_var21) (and new_var4 new_var22) (and new_var4 new_var23) (and new_var4 new_var24) (and new_var4 new_var25) (and new_var4 new_var26) (and new_var4 new_var27) (and new_var4 new_var28)))
(assert new_var34)
(assert new_var40)
(assert (=> new_var42 new_var43))
(assert p0.allows)
(assert (not p1.allows))
(check-sat)
(get-model)